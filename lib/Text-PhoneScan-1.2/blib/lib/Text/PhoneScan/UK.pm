package Text::PhoneScan::UK;
use base 'Text::PhoneScan::Scanner';
my $extension_suffix = __PACKAGE__->extension_suffix;
my $match_prefix = __PACKAGE__->match_prefix;
my $ukphone_int = qr/(\+44\s*|44\s+)\(?[\(\)\d]{2,8}\)?/;
my $ukphone_code = qr/\(0\d{2,6}\)|0\d{2,6}\s*/;
my $ukphone_suffix = qr/\s*[\d -]{6,15}/;
my $ukphone =
qr/($ukphone_int|$ukphone_code)$ukphone_suffix$extension_suffix/;

my $uk_exchanges = qr/0
(?:1
 (?:1(?:3\d|4\d|5\d|6\d|7\d|8\d)
   |2
     (?:0[02456789]|1\d|2[3456789]|3[345679]|4[12345689]|5[023456789]|
        6[01234789]|7[013456789]|8[023456789]|9\d)
   |3
     (?:0\d|1\d|2[023456789]|3[0234579]|4[012346789]|5[023456789]|6[012346789]|
        7[1235679]|8[012346789]|9[24578])
   |4
     (?:0[03456789]|1\d|2[02345789]|3\d|4[0234569]|5[012345678]|6[012345679]|
        7\d|8[012345789]|9[012345679])
   |5
     (?:0[12356789]|1\d|2[02456789]|3[0145689]|4[023456789]|5[03456789]|6\d|
        7[012356789]|8[0123468]|9[012345789])
   |6
     (?:0[034689]|1\d|2[012345689]|3[013456789]|4[123467]|5[01234569]|
        6[13456789]|7[012345678]|8[013456789]|9[0124578])
   |7
     (?:0[0246789]|2\d|3[023678]|4[03456789]|5[012346789]|6[013456789]|
        7[012356789]|8[02456789]|9[023456789])
   |8
     (?:0[356789]|2[12345789]|3[0234578]|4[01234578]|5[12456789]|6[234569]|
        7\d|8[023456789]|9[02569])
   |9
     (?:0[0234589]|1\d|2[02345689]|3[12345789]|4[23456789]|5[01234579]|
        6[234789]|7[0124578]|8[012345689]|9[23457])
  )
|2\d{3}|3\d{3}|4\d{3}|5\d{3}|6\d{3}
|7(?:0\d\d|1\d\d|2\d\d|3\d\d|4\d\d|5\d\d|6\d\d|7\d\d|8\d\d
   |9(?:0\d|1\d|2\d|3\d|4\d|5\d|6\d|7\d|8\d))
|8\d{3}
|9\d{3})/x;

sub scan { 
    my @rv;
    push @rv, $1
        while $_[1]->{text} =~ s/$match_prefix($ukphone)(\b|$)//;
    push @rv, $1
        while $_[1]->{text} =~
        s/$match_prefix(0[12][\s\-\d\(\)]+$extension_suffix)//;
    return @rv;
}

sub check {
    my $class = shift;
    my $number = shift;
    $number =~ s/\D//g;
    return ($number =~ /^$uk_exchanges/ and length $number > 9);
}
1;

